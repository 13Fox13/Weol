"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var plist_1 = __importDefault(require("plist"));
function modifyPlist(vkAppId, appDelegatePath) {
    var plistPath = path_1.default.join(path_1.default.dirname(appDelegatePath), 'Info.plist');
    var plistContents = fs_1.default.readFileSync(plistPath, 'utf8');
    var plistJson = plist_1.default.parse(plistContents);
    var schemes = plistJson.LSApplicationQueriesSchemes || [];
    if (schemes.indexOf('vk') === -1) {
        schemes.push('vk');
    }
    if (schemes.indexOf('vk-share') === -1) {
        schemes.push('vk-share');
    }
    if (schemes.indexOf('vkauthorize') === -1) {
        schemes.push('vkauthorize');
    }
    plistJson.LSApplicationQueriesSchemes = schemes;
    var urlTypes = plistJson.CFBundleURLTypes || [];
    var urlType = "vk" + vkAppId;
    urlTypes = urlTypes.filter(function (ut) { return !/vk\d+/.test(ut.CFBundleURLName); });
    urlTypes.push({ CFBundleTypeRole: 'Editor', CFBundleURLName: urlType, CFBundleURLSchemes: [urlType] });
    plistJson.CFBundleURLTypes = urlTypes;
    var newPlistContents = plist_1.default.build(plistJson);
    fs_1.default.writeFileSync(plistPath, newPlistContents);
}
exports.default = modifyPlist;
