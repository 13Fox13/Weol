"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var createGroupWithMessage_1 = __importDefault(require("react-native/local-cli/link/ios/createGroupWithMessage"));
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var xcode_1 = __importDefault(require("xcode"));
function modifyProject(appDelegatePath, packageName) {
    var projectPath = path_1.default.join(path_1.default.dirname(appDelegatePath), '..', packageName + ".xcodeproj", 'project.pbxproj');
    var project = xcode_1.default.project(projectPath);
    project.parse(function (err) {
        if (err) {
            console.warn("Failed to modify project " + projectPath + ".\n      You have to add VKSdkFramework.framework to embedded binaries manually. Error is: " + err.stack);
            return;
        }
        createGroupWithMessage_1.default(project, 'Frameworks');
        var uuid = project.getFirstTarget().uuid;
        if (!project.hash.project.objects.PBXCopyFilesBuildPhase) {
            project.addBuildPhase([], 'PBXCopyFilesBuildPhase', 'Embed Frameworks', uuid, 'frameworks');
        }
        var opts = {
            embed: true,
            sign: true,
            customFramework: true,
            link: true,
            target: uuid,
            sourceTree: 'BUILT_PRODUCTS_DIR',
            lastKnownFileType: 'wrapper.framework',
        };
        project.addFramework('VKSdkFramework.framework', opts);
        fs_1.default.writeFileSync(projectPath, project.writeSync());
    });
}
exports.default = modifyProject;
